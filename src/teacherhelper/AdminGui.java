/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package teacherhelper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ViSion
 */
public class AdminGui extends javax.swing.JFrame {

    /**
     * Creates new form UserCreationGui
     */
    private Admin admin;
    CareTaker careTaker;

    public AdminGui(User user) {
        admin = (Admin) user;
        careTaker = new CareTaker();
        careTaker.add(admin.saveStateToMemento());
        initComponents();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        jTable.setDefaultRenderer(String.class, centerRenderer);
        jTable1.setDefaultRenderer(String.class, centerRenderer);
        jTable.setDefaultEditor(Object.class, null);
        jTable1.setDefaultEditor(Object.class, null);
        try {
            loadView();
        } catch (SQLException ex) {
            Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void loadView() throws SQLException {
        jTable.setModel(JdbcSingleton.getInstance().getALLUsers(jTable.getModel(), admin));
    }

    public void loadSubjectView() throws SQLException {
        jTable1.setModel(JdbcSingleton.getInstance().getALLSubjects(jTable1.getModel()));
    }

    public void clear() {
        nameTf.setText("");
        lastNameTf.setText("");
        phoneTf.setText("");
        userNameTf.setText("");
        passwordJpf.setText("");
        userTypeCb.setSelectedIndex(0);
        jTable.clearSelection();
    }

    public void clearSubject() {
        subjectNameTf.setText("");
        subjectCreditsCb.setSelectedIndex(0);
    }

    public boolean allInfoAvailable() {
        return (!(nameTf.getText().equals("") || lastNameTf.getText().equals("") || phoneTf.getText().equals("") || userNameTf.getText().equals("") || new String(passwordJpf.getPassword()).equals("")));
    }

    public boolean subjectNameAvailable() {
        return (!subjectNameTf.getText().equals(""));
    }

    public boolean editInfoAvailable() {
        return (!(nameTf.getText().equals("") || lastNameTf.getText().equals("") || phoneTf.getText().equals("") || userNameTf.getText().equals("")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        manageUserPnl = new javax.swing.JPanel();
        userCreationLbl = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        userInfoPnl = new javax.swing.JPanel();
        nameLbl = new javax.swing.JLabel();
        nameTf = new javax.swing.JTextField();
        lastNameLbl = new javax.swing.JLabel();
        lastNameTf = new javax.swing.JTextField();
        phoneLbl = new javax.swing.JLabel();
        phoneTf = new javax.swing.JTextField();
        userNameLbl = new javax.swing.JLabel();
        userNameTf = new javax.swing.JTextField();
        passwordLbl = new javax.swing.JLabel();
        passwordJpf = new javax.swing.JPasswordField();
        userTypeLbl = new javax.swing.JLabel();
        userTypeCb = new javax.swing.JComboBox<>();
        jScrollPane = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        manageSubjectsPnl = new javax.swing.JPanel();
        subjectInfoPnl = new javax.swing.JPanel();
        subjectNameLbl = new javax.swing.JLabel();
        subjectNameTf = new javax.swing.JTextField();
        subjectCreditsLbl = new javax.swing.JLabel();
        subjectCreditsCb = new javax.swing.JComboBox<>();
        subjectCreationLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        saveSubjectBtn = new javax.swing.JButton();
        deleteSubjectBtn = new javax.swing.JButton();
        editSubjectBtn = new javax.swing.JButton();
        clearSubjectBtn = new javax.swing.JButton();
        editProfilePnl = new javax.swing.JPanel();
        profilePnl = new javax.swing.JPanel();
        nameEditLbl = new javax.swing.JLabel();
        nameEditTf = new javax.swing.JTextField();
        lastNameEditLbl = new javax.swing.JLabel();
        lastNameEditTf = new javax.swing.JTextField();
        phoneEditLbl = new javax.swing.JLabel();
        phoneEditTf = new javax.swing.JTextField();
        userNameEditLbl = new javax.swing.JLabel();
        userNameEditTf = new javax.swing.JTextField();
        editProfileLbl = new javax.swing.JLabel();
        editProfileBtn = new javax.swing.JButton();
        changePasswordPnl = new javax.swing.JPanel();
        changePasswordLbl = new javax.swing.JLabel();
        passwordInfoPnl = new javax.swing.JPanel();
        oldPassLbl = new javax.swing.JLabel();
        oldPassTf = new javax.swing.JTextField();
        newPassLbl = new javax.swing.JLabel();
        newPassTf = new javax.swing.JTextField();
        confirmPassLbl = new javax.swing.JLabel();
        confirmPassTf = new javax.swing.JTextField();
        confirmBtn = new javax.swing.JButton();
        undoBtn = new javax.swing.JButton();
        logoutPnl = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Gui");

        jTabbedPane1.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        userCreationLbl.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        userCreationLbl.setText("USER CREATION");

        saveBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        saveBtn.setText("SAVE");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        editBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        editBtn.setText("EDIT");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        userInfoPnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        nameLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        nameLbl.setText("Name");

        nameTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lastNameLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lastNameLbl.setText("Last Name");

        lastNameTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        phoneLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        phoneLbl.setText("Phone");

        phoneTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        userNameLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        userNameLbl.setText("UserName");

        userNameTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        passwordLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        passwordLbl.setText("Password");

        passwordJpf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        userTypeLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        userTypeLbl.setText("User Type");

        userTypeCb.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        userTypeCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Teacher", "Student" }));

        javax.swing.GroupLayout userInfoPnlLayout = new javax.swing.GroupLayout(userInfoPnl);
        userInfoPnl.setLayout(userInfoPnlLayout);
        userInfoPnlLayout.setHorizontalGroup(
            userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userInfoPnlLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(phoneLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nameLbl)
                        .addComponent(lastNameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(userNameLbl)
                    .addComponent(passwordLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userTypeLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addGroup(userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordJpf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userTypeCb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );
        userInfoPnlLayout.setVerticalGroup(
            userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userInfoPnlLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLbl)
                    .addComponent(nameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLbl)
                    .addComponent(lastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneLbl)
                    .addComponent(phoneTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLbl)
                    .addComponent(userNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLbl)
                    .addComponent(passwordJpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(userInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userTypeLbl)
                    .addComponent(userTypeCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "LAST NAME", "PHONE NUMBER", "USER NAME", "USER TYPE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(jTable);

        javax.swing.GroupLayout manageUserPnlLayout = new javax.swing.GroupLayout(manageUserPnl);
        manageUserPnl.setLayout(manageUserPnlLayout);
        manageUserPnlLayout.setHorizontalGroup(
            manageUserPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1105, Short.MAX_VALUE)
            .addGroup(manageUserPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(manageUserPnlLayout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addGroup(manageUserPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(manageUserPnlLayout.createSequentialGroup()
                            .addGap(48, 48, 48)
                            .addComponent(userCreationLbl))
                        .addGroup(manageUserPnlLayout.createSequentialGroup()
                            .addComponent(userInfoPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(manageUserPnlLayout.createSequentialGroup()
                            .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(17, Short.MAX_VALUE)))
        );
        manageUserPnlLayout.setVerticalGroup(
            manageUserPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
            .addGroup(manageUserPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(manageUserPnlLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(userCreationLbl)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(manageUserPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(userInfoPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(20, 20, 20)
                    .addGroup(manageUserPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saveBtn)
                        .addComponent(deleteBtn)
                        .addComponent(editBtn)
                        .addComponent(clearBtn))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Manage Users", manageUserPnl);

        subjectInfoPnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        subjectInfoPnl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        subjectNameLbl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        subjectNameLbl.setText("Name");

        subjectNameTf.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        subjectCreditsLbl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        subjectCreditsLbl.setText("Credits");

        subjectCreditsCb.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        subjectCreditsCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "4", "5", "6" }));

        javax.swing.GroupLayout subjectInfoPnlLayout = new javax.swing.GroupLayout(subjectInfoPnl);
        subjectInfoPnl.setLayout(subjectInfoPnlLayout);
        subjectInfoPnlLayout.setHorizontalGroup(
            subjectInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subjectInfoPnlLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(subjectInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subjectNameLbl)
                    .addComponent(subjectCreditsLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(subjectInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(subjectNameTf)
                    .addComponent(subjectCreditsCb, 0, 192, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );
        subjectInfoPnlLayout.setVerticalGroup(
            subjectInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subjectInfoPnlLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(subjectInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectNameLbl)
                    .addComponent(subjectNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addGroup(subjectInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectCreditsLbl)
                    .addComponent(subjectCreditsCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );

        subjectCreationLbl.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        subjectCreationLbl.setText("SUBJECT CREATION");

        jTable1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "CREDITS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        saveSubjectBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        saveSubjectBtn.setText("SAVE");
        saveSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSubjectBtnActionPerformed(evt);
            }
        });

        deleteSubjectBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        deleteSubjectBtn.setText("DELETE");
        deleteSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSubjectBtnActionPerformed(evt);
            }
        });

        editSubjectBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        editSubjectBtn.setText("EDIT");
        editSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSubjectBtnActionPerformed(evt);
            }
        });

        clearSubjectBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        clearSubjectBtn.setText("CLEAR");
        clearSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSubjectBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageSubjectsPnlLayout = new javax.swing.GroupLayout(manageSubjectsPnl);
        manageSubjectsPnl.setLayout(manageSubjectsPnlLayout);
        manageSubjectsPnlLayout.setHorizontalGroup(
            manageSubjectsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageSubjectsPnlLayout.createSequentialGroup()
                .addGroup(manageSubjectsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageSubjectsPnlLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(subjectCreationLbl))
                    .addGroup(manageSubjectsPnlLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(manageSubjectsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(manageSubjectsPnlLayout.createSequentialGroup()
                                .addComponent(saveSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(editSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clearSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(subjectInfoPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(85, 85, 85)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        manageSubjectsPnlLayout.setVerticalGroup(
            manageSubjectsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageSubjectsPnlLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(subjectCreationLbl)
                .addGap(18, 18, 18)
                .addGroup(manageSubjectsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(subjectInfoPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(manageSubjectsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveSubjectBtn)
                    .addComponent(deleteSubjectBtn)
                    .addComponent(editSubjectBtn)
                    .addComponent(clearSubjectBtn))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Manage Subjects", manageSubjectsPnl);

        profilePnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        profilePnl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        nameEditLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        nameEditLbl.setText("Name");

        nameEditTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lastNameEditLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lastNameEditLbl.setText("Last Name");

        lastNameEditTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        phoneEditLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        phoneEditLbl.setText("Phone");

        phoneEditTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        userNameEditLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        userNameEditLbl.setText("UserName");

        userNameEditTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        javax.swing.GroupLayout profilePnlLayout = new javax.swing.GroupLayout(profilePnl);
        profilePnl.setLayout(profilePnlLayout);
        profilePnlLayout.setHorizontalGroup(
            profilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePnlLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(profilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameEditLbl)
                    .addComponent(phoneEditLbl))
                .addGap(39, 39, 39)
                .addGroup(profilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameEditTf)
                    .addComponent(phoneEditTf, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                .addGap(173, 173, 173)
                .addGroup(profilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNameEditLbl)
                    .addComponent(userNameEditLbl))
                .addGap(45, 45, 45)
                .addGroup(profilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lastNameEditTf)
                    .addComponent(userNameEditTf, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        profilePnlLayout.setVerticalGroup(
            profilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePnlLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(profilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameEditLbl)
                    .addComponent(nameEditTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameEditLbl)
                    .addComponent(lastNameEditTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(profilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneEditLbl)
                    .addComponent(phoneEditTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameEditLbl)
                    .addComponent(userNameEditTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        editProfileLbl.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        editProfileLbl.setText("EDIT PROFILE");

        editProfileBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        editProfileBtn.setText("EDIT");
        editProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProfileBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editProfilePnlLayout = new javax.swing.GroupLayout(editProfilePnl);
        editProfilePnl.setLayout(editProfilePnlLayout);
        editProfilePnlLayout.setHorizontalGroup(
            editProfilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editProfilePnlLayout.createSequentialGroup()
                .addGroup(editProfilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editProfilePnlLayout.createSequentialGroup()
                        .addGap(479, 479, 479)
                        .addComponent(editProfileLbl))
                    .addGroup(editProfilePnlLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(profilePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editProfilePnlLayout.createSequentialGroup()
                        .addGap(484, 484, 484)
                        .addComponent(editProfileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        editProfilePnlLayout.setVerticalGroup(
            editProfilePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editProfilePnlLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(editProfileLbl)
                .addGap(28, 28, 28)
                .addComponent(profilePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editProfileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Edit Profile", editProfilePnl);

        changePasswordLbl.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        changePasswordLbl.setText("CHANGE PASSWORD");

        passwordInfoPnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        passwordInfoPnl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        oldPassLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        oldPassLbl.setText("Old Password");

        oldPassTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        newPassLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        newPassLbl.setText("New Password");

        newPassTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        confirmPassLbl.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        confirmPassLbl.setText("Confirm Password");

        confirmPassTf.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        javax.swing.GroupLayout passwordInfoPnlLayout = new javax.swing.GroupLayout(passwordInfoPnl);
        passwordInfoPnl.setLayout(passwordInfoPnlLayout);
        passwordInfoPnlLayout.setHorizontalGroup(
            passwordInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordInfoPnlLayout.createSequentialGroup()
                .addGroup(passwordInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(passwordInfoPnlLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addGroup(passwordInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(oldPassLbl)
                            .addComponent(newPassLbl)))
                    .addGroup(passwordInfoPnlLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(confirmPassLbl)))
                .addGap(116, 116, 116)
                .addGroup(passwordInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(oldPassTf)
                    .addComponent(newPassTf)
                    .addComponent(confirmPassTf, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        passwordInfoPnlLayout.setVerticalGroup(
            passwordInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordInfoPnlLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(passwordInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldPassLbl)
                    .addComponent(oldPassTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(passwordInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPassLbl)
                    .addComponent(newPassTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(passwordInfoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPassLbl)
                    .addComponent(confirmPassTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        confirmBtn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        confirmBtn.setText("CONFIRM");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        undoBtn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        undoBtn.setText("UNDO");
        undoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout changePasswordPnlLayout = new javax.swing.GroupLayout(changePasswordPnl);
        changePasswordPnl.setLayout(changePasswordPnlLayout);
        changePasswordPnlLayout.setHorizontalGroup(
            changePasswordPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changePasswordPnlLayout.createSequentialGroup()
                .addGroup(changePasswordPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changePasswordPnlLayout.createSequentialGroup()
                        .addGap(421, 421, 421)
                        .addComponent(changePasswordLbl))
                    .addGroup(changePasswordPnlLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(passwordInfoPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(changePasswordPnlLayout.createSequentialGroup()
                        .addGap(432, 432, 432)
                        .addComponent(confirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(undoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(195, Short.MAX_VALUE))
        );
        changePasswordPnlLayout.setVerticalGroup(
            changePasswordPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changePasswordPnlLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(changePasswordLbl)
                .addGap(30, 30, 30)
                .addComponent(passwordInfoPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(changePasswordPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(undoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Change Password", changePasswordPnl);

        javax.swing.GroupLayout logoutPnlLayout = new javax.swing.GroupLayout(logoutPnl);
        logoutPnl.setLayout(logoutPnlLayout);
        logoutPnlLayout.setHorizontalGroup(
            logoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1105, Short.MAX_VALUE)
        );
        logoutPnlLayout.setVerticalGroup(
            logoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Logout", logoutPnl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed

        if (allInfoAvailable()) {
            try {
                if (JdbcSingleton.getInstance().searchUser(userNameTf.getText())) {
                    JOptionPane.showMessageDialog(this, "Username Already Exist Choose Another");
                } else {

                    admin.addUser(nameTf.getText(), lastNameTf.getText(), phoneTf.getText(), userNameTf.getText(), new String(passwordJpf.getPassword()), userTypeCb.getSelectedItem().toString());
                    JOptionPane.showMessageDialog(this, "User Successfuly Created");
                    ResultSet rs = JdbcSingleton.getInstance().getUser(userNameTf.getText());
                    DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                    while (rs.next()) {
                        model.addRow(new Object[]{rs.getString("id"), rs.getString("name"), rs.getString("lastname"), rs.getString("phone"),
                            rs.getString("username"), rs.getString("userType")});
                    }
                    clear();
                }
            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Some Informations are Missing");
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (jTabbedPane1.getSelectedIndex() == 1) {
            try {
                loadSubjectView();
            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (jTabbedPane1.getSelectedIndex() == 2) {
            try {

                ResultSet rs = JdbcSingleton.getInstance().loadProfile(admin);
                while (rs.next()) {
                    nameEditTf.setText(rs.getString("name"));
                    lastNameEditTf.setText(rs.getString("lastname"));
                    phoneEditTf.setText(rs.getString("phone"));
                    userNameEditTf.setText(rs.getString("username"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (jTabbedPane1.getSelectedIndex() == 4) {
            admin.logout(this);
        }

    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        int selectedIndex = jTable.getSelectedRow();
        nameTf.setText(jTable.getValueAt(selectedIndex, 1).toString());
        lastNameTf.setText(jTable.getValueAt(selectedIndex, 2).toString());
        phoneTf.setText(jTable.getValueAt(selectedIndex, 3).toString());
        userNameTf.setText(jTable.getValueAt(selectedIndex, 4).toString());
        userTypeCb.setSelectedItem(jTable.getValueAt(selectedIndex, 5).toString());
        passwordJpf.setText("");
    }//GEN-LAST:event_jTableMouseClicked

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clear();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        if (jTable.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "You Didnt Make A Selection !!");
        } else {
            int selectedIndex = jTable.getSelectedRow();
            try {
                admin.deleteUser(Integer.parseInt(jTable.getValueAt(selectedIndex, 0).toString()), this);
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                model.setRowCount(0);
                loadView();
                clear();
            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (!editInfoAvailable() || jTable.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Some Fields Are Missing Or You Didnt Make A Selection !!");
        } else {
            int selectedIndex = jTable.getSelectedRow();

            try {
                admin.updateUser(Integer.parseInt(jTable.getValueAt(selectedIndex, 0).toString()), nameTf.getText(), lastNameTf.getText(), phoneTf.getText(), userNameTf.getText(), new String(passwordJpf.getPassword()), userTypeCb.getSelectedItem().toString(), this);

                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                model.setRowCount(0);
                loadView();
                clear();

            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void editProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProfileBtnActionPerformed
        try {
            admin.editProfile(admin, nameEditTf.getText(), lastNameEditTf.getText(), phoneEditTf.getText(), userNameEditTf.getText(), this);
            admin.setName(nameEditTf.getText());
            admin.setLastName(lastNameEditTf.getText());
            admin.setPhone(phoneTf.getText());
            admin.setUsername(userNameTf.getText());
        } catch (SQLException ex) {
            Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editProfileBtnActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        if (oldPassTf.getText() == "" || newPassTf.getText() == "" || confirmPassTf.getText() == "") {
            JOptionPane.showMessageDialog(this, "Some Fields Are Missing !!");
        } else {
            try {
                if (!JdbcSingleton.getInstance().verifyOldPassword(admin, oldPassTf.getText())) {
                    JOptionPane.showMessageDialog(this, "Wrong Old Password !!");
                } else {

                    if (!newPassTf.getText().equals(confirmPassTf.getText())) {
                        JOptionPane.showMessageDialog(this, "New Pass And Confirmation Are Not The Same !!");
                    } else {
                        admin.changePassword(admin, newPassTf.getText(), this);
                        admin.setPassword(newPassTf.getText());
                        careTaker.add(admin.saveStateToMemento());

                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_confirmBtnActionPerformed

    private void undoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoBtnActionPerformed
        if (careTaker.getList().size() > 1) {
            try {
                admin.changePassword(admin, careTaker.get(careTaker.getList().size() - 2).getState(), this);
            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }

            admin.setPassword(careTaker.get(careTaker.getList().size() - 2).getState());

            careTaker.getList().remove(careTaker.getList().size() - 1);
        } else {
            JOptionPane.showMessageDialog(this, "There Is Nothing To Undo !!");
        }
    }//GEN-LAST:event_undoBtnActionPerformed

    private void saveSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSubjectBtnActionPerformed
        if (subjectNameAvailable()) {
            try {
                if (JdbcSingleton.getInstance().searchSubject(subjectNameTf.getText())) {
                    JOptionPane.showMessageDialog(this, "Subject Already Exist !!");
                } else {

                    admin.addSubject(subjectNameTf.getText(), Integer.parseInt(subjectCreditsCb.getSelectedItem().toString()));
                    JOptionPane.showMessageDialog(this, "Subject Successfuly Created");
                    ResultSet rs = JdbcSingleton.getInstance().getSubject(subjectNameTf.getText());
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    while (rs.next()) {
                        model.addRow(new Object[]{rs.getString("subjectId"), rs.getString("name"), rs.getString("credits")});
                    }
                    clearSubject();
                }
            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Some Informations are Missing");
        }
    }//GEN-LAST:event_saveSubjectBtnActionPerformed

    private void deleteSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSubjectBtnActionPerformed
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "You Didnt Make A Selection !!");
        } else {
            int selectedIndex = jTable1.getSelectedRow();
            try {
                admin.deleteSubject(Integer.parseInt(jTable1.getValueAt(selectedIndex, 0).toString()), this);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                loadSubjectView();
                clearSubject();
            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteSubjectBtnActionPerformed

    private void editSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSubjectBtnActionPerformed
        if (!subjectNameAvailable() || jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Some Fields Are Missing Or You Didnt Make A Selection !!");
        } else {
            int selectedIndex = jTable1.getSelectedRow();

            try {
                admin.updateSubject(Integer.parseInt(jTable1.getValueAt(selectedIndex, 0).toString()), subjectNameTf.getText(), subjectCreditsCb.getSelectedItem().toString(), this);

                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                loadSubjectView();
                clearSubject();

            } catch (SQLException ex) {
                Logger.getLogger(AdminGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editSubjectBtnActionPerformed

    private void clearSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSubjectBtnActionPerformed
        clearSubject();
    }//GEN-LAST:event_clearSubjectBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        subjectNameTf.setText(jTable1.getValueAt(selectedIndex, 1).toString());
        subjectCreditsCb.setSelectedItem(jTable1.getValueAt(selectedIndex, 2).toString());
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel changePasswordLbl;
    private javax.swing.JPanel changePasswordPnl;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton clearSubjectBtn;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JLabel confirmPassLbl;
    private javax.swing.JTextField confirmPassTf;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton deleteSubjectBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton editProfileBtn;
    private javax.swing.JLabel editProfileLbl;
    private javax.swing.JPanel editProfilePnl;
    private javax.swing.JButton editSubjectBtn;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lastNameEditLbl;
    private javax.swing.JTextField lastNameEditTf;
    private javax.swing.JLabel lastNameLbl;
    private javax.swing.JTextField lastNameTf;
    private javax.swing.JPanel logoutPnl;
    private javax.swing.JPanel manageSubjectsPnl;
    private javax.swing.JPanel manageUserPnl;
    private javax.swing.JLabel nameEditLbl;
    private javax.swing.JTextField nameEditTf;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTf;
    private javax.swing.JLabel newPassLbl;
    private javax.swing.JTextField newPassTf;
    private javax.swing.JLabel oldPassLbl;
    private javax.swing.JTextField oldPassTf;
    private javax.swing.JPanel passwordInfoPnl;
    private javax.swing.JPasswordField passwordJpf;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JLabel phoneEditLbl;
    private javax.swing.JTextField phoneEditTf;
    private javax.swing.JLabel phoneLbl;
    private javax.swing.JTextField phoneTf;
    private javax.swing.JPanel profilePnl;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton saveSubjectBtn;
    private javax.swing.JLabel subjectCreationLbl;
    private javax.swing.JComboBox<String> subjectCreditsCb;
    private javax.swing.JLabel subjectCreditsLbl;
    private javax.swing.JPanel subjectInfoPnl;
    private javax.swing.JLabel subjectNameLbl;
    private javax.swing.JTextField subjectNameTf;
    private javax.swing.JButton undoBtn;
    private javax.swing.JLabel userCreationLbl;
    private javax.swing.JPanel userInfoPnl;
    private javax.swing.JLabel userNameEditLbl;
    private javax.swing.JTextField userNameEditTf;
    private javax.swing.JLabel userNameLbl;
    private javax.swing.JTextField userNameTf;
    private javax.swing.JComboBox<String> userTypeCb;
    private javax.swing.JLabel userTypeLbl;
    // End of variables declaration//GEN-END:variables
}
